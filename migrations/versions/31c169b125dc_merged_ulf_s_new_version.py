"""Merged Ulf's new version

Revision ID: 31c169b125dc
Revises: 909f171d611e
Create Date: 2025-07-11 21:37:40.386328

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '31c169b125dc'
down_revision = '909f171d611e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ObservationHistory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Datum', sa.String(length=25), nullable=False),
    sa.Column('Objekt', sa.String(length=80), nullable=True),
    sa.Column('Rubrik', sa.String(length=160), nullable=True),
    sa.Column('Teleskop', sa.String(length=100), nullable=True),
    sa.Column('EinzelbelichtungSekunden', sa.String(length=60), nullable=True),
    sa.Column('Bildanzahl', sa.String(length=5), nullable=True),
    sa.Column('Filter', sa.String(length=60), nullable=True),
    sa.Column('Bildersteller', sa.String(length=80), nullable=True),
    sa.Column('Observer', sa.String(length=80), nullable=True),
    sa.Column('NeuentdeckteKleinplaneten', sa.String(length=80), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_table('catalogue_meta',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('author', sa.String(length=100), nullable=False),
    sa.Column('source', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('license', sa.String(length=100), nullable=False),
    sa.Column('maintainer', sa.String(length=100), nullable=False),
    sa.Column('equinoxes', sa.String(length=50), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sqlite_autoincrement=True
    )
    op.create_table('motivation_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Motivation', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('Motivation'),
    sqlite_autoincrement=True
    )
    op.create_table('object_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Objecttype', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('Objecttype'),
    sqlite_autoincrement=True
    )
    op.create_table('poweruser',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('mobilfone', sa.String(length=20), nullable=False),
    sa.Column('fone', sa.String(length=20), nullable=True),
    sa.Column('Einweisung', sa.String(length=30), nullable=True),
    sa.Column('Status', sa.String(length=20), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('name'),
    sqlite_autoincrement=True
    )
    op.create_table('system_parameters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parameter', sa.String(length=50), nullable=False),
    sa.Column('value', sa.String(length=150), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('parameter'),
    sqlite_autoincrement=True
    )
    op.create_table('system_parameters_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parameter', sa.String(length=50), nullable=False),
    sa.Column('value', sa.String(length=50), nullable=True),
    sa.Column('history_reason', sa.String(length=1), nullable=False),
    sa.Column('history_timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_table('catalogue',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('catalogue_meta_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('long_name', sa.String(length=100), nullable=True),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.Column('ra', sa.Float(), nullable=False),
    sa.Column('dec', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['catalogue_meta_id'], ['catalogue_meta.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sqlite_autoincrement=True
    )
    op.create_table('user_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('key', sa.String(length=100), nullable=True),
    sa.Column('value', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_table('observation_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('request_date', sa.DateTime(), nullable=False),
    sa.Column('request_observatory_id', sa.Integer(), nullable=False),
    sa.Column('request_type', sa.String(length=10), nullable=False),
    sa.Column('request_purpose', sa.String(length=100), nullable=False),
    sa.Column('request_poweruser_id', sa.Integer(), nullable=True),
    sa.Column('remark', sa.String(length=2000), nullable=True),
    sa.Column('status', sa.String(length=10), nullable=False),
    sa.ForeignKeyConstraint(['request_observatory_id'], ['observatory.id'], ),
    sa.ForeignKeyConstraint(['request_poweruser_id'], ['poweruser.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_table('filterset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('telescope_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['telescope_id'], ['telescope.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_table('observation_request_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('type', sa.String(length=10), nullable=True),
    sa.Column('subtype', sa.String(length=10), nullable=True),
    sa.Column('text', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['observation_request.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_table('observation_request_position',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('observation_request_id', sa.Integer(), nullable=False),
    sa.Column('row_no', sa.Integer(), nullable=False),
    sa.Column('telescope_id', sa.Integer(), nullable=False),
    sa.Column('filterset_id', sa.Integer(), nullable=True),
    sa.Column('target_objecttype', sa.String(length=200), nullable=True),
    sa.Column('target', sa.String(length=200), nullable=True),
    sa.Column('target_coordinates', sa.String(length=200), nullable=True),
    sa.Column('target_coordinates_lock', sa.String(length=1), nullable=True),
    sa.Column('exposure_count', sa.Integer(), nullable=True),
    sa.Column('exposure_time', sa.Integer(), nullable=True),
    sa.Column('exposure_gain', sa.Integer(), nullable=True),
    sa.Column('exposure_offset', sa.Integer(), nullable=True),
    sa.Column('exposure_dither', sa.Integer(), nullable=True),
    sa.Column('exposure_focus', sa.Integer(), nullable=True),
    sa.Column('exposure_starttime', sa.Time(), nullable=True),
    sa.ForeignKeyConstraint(['filterset_id'], ['filterset.id'], ),
    sa.ForeignKeyConstraint(['observation_request_id'], ['observation_request.id'], ),
    sa.ForeignKeyConstraint(['telescope_id'], ['telescope.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.drop_table('observations_request')
    with op.batch_alter_table('group', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=30),
               existing_nullable=False)

    with op.batch_alter_table('observatory', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=30),
               existing_nullable=False)

    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=30),
               existing_nullable=False)

    with op.batch_alter_table('site', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=False)

    with op.batch_alter_table('telescope', schema=None) as batch_op:
        batch_op.add_column(sa.Column('status', sa.String(length=2), nullable=False))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=30),
               existing_nullable=False)
        batch_op.alter_column('observatory_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('camera_name',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=30),
               existing_nullable=False)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('last_login', sa.DateTime(), nullable=True))
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=60),
               existing_nullable=False)
        batch_op.alter_column('image_file',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=60),
               existing_nullable=False)
        batch_op.alter_column('surname',
               existing_type=sa.VARCHAR(length=30),
               type_=sa.String(length=40),
               existing_nullable=True)
        batch_op.alter_column('firstname',
               existing_type=sa.VARCHAR(length=30),
               type_=sa.String(length=40),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('firstname',
               existing_type=sa.String(length=40),
               type_=sa.VARCHAR(length=30),
               existing_nullable=True)
        batch_op.alter_column('surname',
               existing_type=sa.String(length=40),
               type_=sa.VARCHAR(length=30),
               existing_nullable=True)
        batch_op.alter_column('image_file',
               existing_type=sa.String(length=60),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.String(length=60),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
        batch_op.drop_column('last_login')

    with op.batch_alter_table('telescope', schema=None) as batch_op:
        batch_op.alter_column('camera_name',
               existing_type=sa.String(length=30),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
        batch_op.alter_column('observatory_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.String(length=30),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
        batch_op.drop_column('status')

    with op.batch_alter_table('site', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)

    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.String(length=30),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)

    with op.batch_alter_table('observatory', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.String(length=30),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)

    with op.batch_alter_table('group', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.String(length=30),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)

    op.create_table('observations_request',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=20), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('telescope_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['telescope_id'], ['telescope.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.drop_table('observation_request_position')
    op.drop_table('observation_request_log')
    op.drop_table('filterset')
    op.drop_table('observation_request')
    op.drop_table('user_preferences')
    op.drop_table('catalogue')
    op.drop_table('system_parameters_history')
    op.drop_table('system_parameters')
    op.drop_table('poweruser')
    op.drop_table('object_types')
    op.drop_table('motivation_types')
    op.drop_table('catalogue_meta')
    op.drop_table('ObservationHistory')
    # ### end Alembic commands ###
